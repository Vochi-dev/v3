#!/bin/bash

# Bitrix24 Integration Service Management Script
# Port: 8024

SERVICE_NAME="bitrix24"
SERVICE_FILE="24.py"
SERVICE_PORT="8024"
PID_FILE="pids/${SERVICE_NAME}.pid"
LOG_FILE="logs/${SERVICE_NAME}.log"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
mkdir -p pids logs

case "$1" in
    start)
        if [ -f "$PID_FILE" ]; then
            PID=$(cat "$PID_FILE")
            if ps -p "$PID" > /dev/null 2>&1; then
                echo "‚ö†Ô∏è  $SERVICE_NAME —É–∂–µ –∑–∞–ø—É—â–µ–Ω (PID: $PID)"
                exit 1
            else
                echo "üßπ –£–¥–∞–ª—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–π PID —Ñ–∞–π–ª"
                rm -f "$PID_FILE"
            fi
        fi
        
        echo "üöÄ –ó–∞–ø—É—Å–∫ $SERVICE_NAME –Ω–∞ –ø–æ—Ä—Ç—É $SERVICE_PORT..."
        nohup python3 "$SERVICE_FILE" > "$LOG_FILE" 2>&1 &
        echo $! > "$PID_FILE"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—É—Å–∫
        sleep 2
        if ps -p $(cat "$PID_FILE") > /dev/null 2>&1; then
            echo "‚úÖ $SERVICE_NAME —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω (PID: $(cat "$PID_FILE"))"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞
            if curl -s "http://localhost:$SERVICE_PORT/health" > /dev/null; then
                echo "üåê –°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:$SERVICE_PORT"
            else
                echo "‚ö†Ô∏è  –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω, –Ω–æ –ø–æ—Ä—Ç $SERVICE_PORT –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
            fi
        else
            echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ $SERVICE_NAME"
            rm -f "$PID_FILE"
            exit 1
        fi
        ;;
        
    stop)
        if [ -f "$PID_FILE" ]; then
            PID=$(cat "$PID_FILE")
            if ps -p "$PID" > /dev/null 2>&1; then
                echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ $SERVICE_NAME (PID: $PID)..."
                kill "$PID"
                
                # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
                for i in {1..10}; do
                    if ! ps -p "$PID" > /dev/null 2>&1; then
                        break
                    fi
                    sleep 1
                done
                
                # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –µ—Å–ª–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è
                if ps -p "$PID" > /dev/null 2>&1; then
                    echo "‚ö° –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ $SERVICE_NAME..."
                    kill -9 "$PID"
                fi
                
                rm -f "$PID_FILE"
                echo "‚úÖ $SERVICE_NAME –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            else
                echo "‚ö†Ô∏è  $SERVICE_NAME –Ω–µ –∑–∞–ø—É—â–µ–Ω"
                rm -f "$PID_FILE"
            fi
        else
            echo "‚ö†Ô∏è  $SERVICE_NAME –Ω–µ –∑–∞–ø—É—â–µ–Ω (PID —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω)"
        fi
        ;;
        
    restart)
        echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ $SERVICE_NAME..."
        $0 stop
        sleep 2
        $0 start
        ;;
        
    status)
        if [ -f "$PID_FILE" ]; then
            PID=$(cat "$PID_FILE")
            if ps -p "$PID" > /dev/null 2>&1; then
                echo "‚úÖ $SERVICE_NAME –∑–∞–ø—É—â–µ–Ω (PID: $PID)"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
                if curl -s "http://localhost:$SERVICE_PORT/health" > /dev/null; then
                    echo "üåê –°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:$SERVICE_PORT"
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                    echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–∏—Å–∞:"
                    curl -s "http://localhost:$SERVICE_PORT/stats" | python3 -m json.tool 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
                else
                    echo "‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $SERVICE_PORT"
                fi
            else
                echo "‚ùå $SERVICE_NAME –Ω–µ –∑–∞–ø—É—â–µ–Ω (–ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω)"
                rm -f "$PID_FILE"
            fi
        else
            echo "‚ùå $SERVICE_NAME –Ω–µ –∑–∞–ø—É—â–µ–Ω (PID —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω)"
        fi
        ;;
        
    logs)
        if [ -f "$LOG_FILE" ]; then
            echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ $SERVICE_NAME:"
            tail -n 50 "$LOG_FILE"
        else
            echo "‚ö†Ô∏è  –õ–æ–≥ —Ñ–∞–π–ª $LOG_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
        ;;
        
    health)
        if curl -s "http://localhost:$SERVICE_PORT/health" > /dev/null; then
            echo "‚úÖ $SERVICE_NAME –∑–¥–æ—Ä–æ–≤"
            curl -s "http://localhost:$SERVICE_PORT/health" | python3 -m json.tool
        else
            echo "‚ùå $SERVICE_NAME –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
            exit 1
        fi
        ;;
        
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|status|logs|health}"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  start   - –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME"
        echo "  stop    - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME"
        echo "  restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME"
        echo "  status  - –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME"
        echo "  logs    - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞"
        echo "  health  - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞"
        exit 1
        ;;
esac
