#!/bin/bash

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SERVICE_NAME="miniapp"
SERVICE_DISPLAY_NAME="Mini App Service"
SERVICE_FILE="mini_app/miniapp_service.py"
SERVICE_PORT=8017
LOG_FILE="logs/${SERVICE_NAME}_service.log"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è PID –ø—Ä–æ—Ü–µ—Å—Å–∞
get_pid() {
    pgrep -f "$SERVICE_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    local pid=$(get_pid)
    if [ -n "$pid" ]; then
        echo "‚úÖ $SERVICE_DISPLAY_NAME –∑–∞–ø—É—â–µ–Ω (PID: $pid)"
        return 0
    else
        echo "‚ùå $SERVICE_DISPLAY_NAME –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
start_service() {
    local pid=$(get_pid)
    if [ -n "$pid" ]; then
        echo "‚ö†Ô∏è  $SERVICE_DISPLAY_NAME —É–∂–µ –∑–∞–ø—É—â–µ–Ω (PID: $pid)"
        return 1
    fi
    
    echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º $SERVICE_DISPLAY_NAME..."
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    mkdir -p logs
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
    cd /root/asterisk-webhook
    nohup python3 $SERVICE_FILE > $LOG_FILE 2>&1 &
    
    sleep 2
    
    local new_pid=$(get_pid)
    if [ -n "$new_pid" ]; then
        echo "‚úÖ $SERVICE_DISPLAY_NAME –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $SERVICE_PORT (PID: $new_pid)"
        return 0
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å $SERVICE_DISPLAY_NAME"
        echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞:"
        tail -5 $LOG_FILE 2>/dev/null || echo "–õ–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
stop_service() {
    local pid=$(get_pid)
    if [ -z "$pid" ]; then
        echo "‚ö†Ô∏è  $SERVICE_DISPLAY_NAME –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
    
    echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $SERVICE_DISPLAY_NAME (PID: $pid)..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    kill $pid
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
    local count=0
    while [ $count -lt 10 ]; do
        if [ -z "$(get_pid)" ]; then
            echo "‚úÖ $SERVICE_DISPLAY_NAME –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            return 0
        fi
        sleep 1
        count=$((count + 1))
    done
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞
    echo "‚ö†Ô∏è  –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ $SERVICE_DISPLAY_NAME..."
    kill -9 $pid 2>/dev/null
    
    if [ -z "$(get_pid)" ]; then
        echo "‚úÖ $SERVICE_DISPLAY_NAME –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 0
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $SERVICE_DISPLAY_NAME"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
restart_service() {
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ $SERVICE_DISPLAY_NAME..."
    stop_service
    sleep 2
    start_service
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
show_logs() {
    local lines=${1:-20}
    if [ -f "$LOG_FILE" ]; then
        echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ $lines —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞ $SERVICE_DISPLAY_NAME:"
        tail -n $lines $LOG_FILE
    else
        echo "‚ùå –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $LOG_FILE"
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
test_service() {
    echo "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º $SERVICE_DISPLAY_NAME..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω
    if ! check_status >/dev/null; then
        echo "‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º HTTP endpoint
    echo "üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º HTTP endpoint..."
    local response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:$SERVICE_PORT/health)
    
    if [ "$response" = "200" ]; then
        echo "‚úÖ HTTP endpoint –æ—Ç–≤–µ—á–∞–µ—Ç (–∫–æ–¥: $response)"
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        echo "üì± –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É Mini App..."
        local main_response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:$SERVICE_PORT/)
        
        if [ "$main_response" = "200" ]; then
            echo "‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ (–∫–æ–¥: $main_response)"
            echo "üéØ $SERVICE_DISPLAY_NAME —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"
            return 0
        else
            echo "‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–∫–æ–¥: $main_response)"
            return 1
        fi
    else
        echo "‚ùå HTTP endpoint –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–∫–æ–¥: $response)"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø–æ—Ä—Ç–æ–≤
clean_port() {
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ –ø–æ—Ä—Ç–∞ $SERVICE_PORT..."
    local pids=$(lsof -ti:$SERVICE_PORT 2>/dev/null)
    if [ -n "$pids" ]; then
        echo "üî´ –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É $SERVICE_PORT: $pids"
        kill -9 $pids
        echo "‚úÖ –ü–æ—Ä—Ç $SERVICE_PORT –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω"
    else
        echo "‚úÖ –ü–æ—Ä—Ç $SERVICE_PORT —Å–≤–æ–±–æ–¥–µ–Ω"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "$1" in
    start)
        start_service
        ;;
    stop)
        stop_service
        ;;
    restart)
        restart_service
        ;;
    status)
        check_status
        ;;
    logs)
        show_logs $2
        ;;
    test)
        test_service
        ;;
    clean)
        clean_port
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|status|logs [N]|test|clean}"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  start    - –ó–∞–ø—É—Å—Ç–∏—Ç—å $SERVICE_DISPLAY_NAME"
        echo "  stop     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $SERVICE_DISPLAY_NAME"
        echo "  restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å $SERVICE_DISPLAY_NAME"
        echo "  status   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å $SERVICE_DISPLAY_NAME"
        echo "  logs [N] - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 20)"
        echo "  test     - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É $SERVICE_DISPLAY_NAME"
        echo "  clean    - –û—á–∏—Å—Ç–∏—Ç—å –ø–æ—Ä—Ç $SERVICE_PORT"
        echo ""
        echo "–ü–æ—Ä—Ç: $SERVICE_PORT"
        echo "–õ–æ–≥:  $LOG_FILE"
        exit 1
        ;;
esac

exit $?