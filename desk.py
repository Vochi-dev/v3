#!/usr/bin/env python3
"""
Desk –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å - —Å–µ—Ä–≤–∏—Å-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –±—É–¥—É—â–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
–ü–æ—Ä—Ç: 8011
"""

import os
import json
import asyncio
import logging
from datetime import datetime
from typing import Dict, List, Optional, Any
from fastapi import FastAPI, HTTPException, Request, Query
from fastapi.responses import JSONResponse, HTMLResponse
from fastapi.staticfiles import StaticFiles
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = FastAPI(
    title="Desk Service",
    description="–°–µ—Ä–≤–∏—Å-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –±—É–¥—É—â–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞",
    version="1.0.0"
)

# –ú–æ–Ω—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã (—Ñ–∞–≤–∏–∫–æ–Ω—ã –∏ –¥—Ä—É–≥–∏–µ —Ä–µ—Å—É—Ä—Å—ã)
app.mount("/static", StaticFiles(directory="app/static"), name="static")

# CORS middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö
class StatusResponse(BaseModel):
    status: str
    message: str
    timestamp: str
    version: str

class HealthResponse(BaseModel):
    health: str
    uptime: str
    service: str

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
start_time = datetime.now()

@app.on_event("startup")
async def startup_event():
    """–°–æ–±—ã—Ç–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ Desk —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ –ø–æ—Ä—Ç—É 8011")
    logger.info("üìã –°–µ—Ä–≤–∏—Å-–∑–∞–≥–ª—É—à–∫–∞ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")

@app.on_event("shutdown")
async def shutdown_event():
    """–°–æ–±—ã—Ç–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–∞"""
    logger.info("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Desk —Å–µ—Ä–≤–∏—Å–∞")

@app.get("/", response_class=HTMLResponse)
async def root(enterprise: str = Query(None, description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è")):
    """–ö–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–∞–±–æ—á–µ–≥–æ —Å—Ç–æ–ª–∞"""
    enterprise_name = enterprise or "–ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ"
    
    html_content = f"""
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª {enterprise_name}</title>
    
    <!-- Favicon and App Icons -->
    <link rel="icon" type="image/x-icon" href="/static/favicon.ico">
    <link rel="icon" type="image/png" sizes="16x16" href="/static/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/static/favicon-32x32.png">
    <link rel="apple-touch-icon" href="/static/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="192x192" href="/static/android-chrome-192x192.png">
    <link rel="icon" type="image/png" sizes="512x512" href="/static/android-chrome-512x512.png">
    <link rel="manifest" href="/static/site.webmanifest">
    
    <style>
        body {{
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }}
        
        .header {{
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 1rem 2rem;
            display: flex;
            align-items: center;
            justify-content: space-between;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }}
        
        .header h1 {{
            color: white;
            margin: 0;
            font-size: 1.5rem;
            font-weight: 600;
        }}
        
        .header .info {{
            color: rgba(255, 255, 255, 0.8);
            font-size: 0.9rem;
        }}
        
        .container {{
            flex: 1;
            padding: 2rem;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }}
        
        .welcome-card {{
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 3rem;
            text-align: center;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            max-width: 600px;
            width: 100%;
        }}
        
        .welcome-card h2 {{
            color: #333;
            margin: 0 0 1rem 0;
            font-size: 2rem;
            font-weight: 700;
        }}
        
        .welcome-card p {{
            color: #666;
            font-size: 1.1rem;
            line-height: 1.6;
            margin-bottom: 2rem;
        }}
        
        .features-grid {{
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }}
        
        .feature-card {{
            background: rgba(255, 255, 255, 0.9);
            border-radius: 15px;
            padding: 1.5rem;
            text-align: center;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.05);
            transition: transform 0.3s ease;
        }}
        
        .feature-card:hover {{
            transform: translateY(-5px);
        }}
        
        .feature-icon {{
            font-size: 3rem;
            margin-bottom: 1rem;
        }}
        
        .feature-title {{
            font-size: 1.2rem;
            font-weight: 600;
            color: #333;
            margin-bottom: 0.5rem;
        }}
        
        .feature-desc {{
            color: #666;
            font-size: 0.9rem;
        }}
        
        .status-info {{
            background: rgba(40, 167, 69, 0.1);
            border: 1px solid rgba(40, 167, 69, 0.3);
            border-radius: 10px;
            padding: 1rem;
            margin-top: 2rem;
            text-align: center;
            color: #155724;
        }}
        
        .footer {{
            text-align: center;
            padding: 1rem;
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.9rem;
        }}
        
        @media (max-width: 768px) {{
            .header {{
                padding: 1rem;
            }}
            .container {{
                padding: 1rem;
            }}
            .welcome-card {{
                padding: 2rem;
            }}
            .features-grid {{
                grid-template-columns: 1fr;
            }}
        }}
    </style>
</head>
<body>
    <div class="header">
        <h1>üñ•Ô∏è –†–∞–±–æ—á–∏–π —Å—Ç–æ–ª {enterprise_name}</h1>
        <div class="info">
            –ü–æ—Ä—Ç: 8011 | –°–µ—Ä–≤–∏—Å: Desk
        </div>
    </div>
    
    <div class="container">
        <div class="welcome-card">
            <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h2>
            <p>–≠—Ç–æ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª –¥–ª—è –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è <strong>{enterprise_name}</strong>. 
            –ó–¥–µ—Å—å –±—É–¥—É—Ç —Ä–∞–∑–º–µ—â–µ–Ω—ã –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–æ–π.</p>
            
            <div class="status-info">
                ‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ | –í–µ—Ä—Å–∏—è 1.0.0 | –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {start_time.strftime('%d.%m.%Y %H:%M:%S')}
            </div>
            
            <div class="features-grid">
                <div class="feature-card">
                    <div class="feature-icon">üìä</div>
                    <div class="feature-title">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</div>
                    <div class="feature-desc">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å–∏—Å—Ç–µ–º—ã</div>
                </div>
                
                <div class="feature-card">
                    <div class="feature-icon">‚öôÔ∏è</div>
                    <div class="feature-title">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</div>
                    <div class="feature-desc">–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏—Å—Ç–µ–º—ã</div>
                </div>
                
                <div class="feature-card">
                    <div class="feature-icon">üìû</div>
                    <div class="feature-title">–¢–µ–ª–µ—Ñ–æ–Ω–∏—è</div>
                    <div class="feature-desc">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–≤–æ–Ω–∫–∞–º–∏ –∏ –ª–∏–Ω–∏—è–º–∏</div>
                </div>
                
                <div class="feature-card">
                    <div class="feature-icon">üë•</div>
                    <div class="feature-title">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</div>
                    <div class="feature-desc">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –ø—Ä–∞–≤–∞–º–∏</div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="footer">
        <p>&copy; 2025 Asterisk Webhook System | Desk Service v1.0.0</p>
    </div>
    
    <script>
        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.log('üñ•Ô∏è –†–∞–±–æ—á–∏–π —Å—Ç–æ–ª {enterprise_name} –∑–∞–≥—Ä—É–∂–µ–Ω');
        console.log('‚è∞ –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏:', new Date().toLocaleString());
        
        // –ü—Ä–æ—Å—Ç–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        document.addEventListener('DOMContentLoaded', function() {{
            const cards = document.querySelectorAll('.feature-card');
            cards.forEach((card, index) => {{
                setTimeout(() => {{
                    card.style.opacity = '0';
                    card.style.transform = 'translateY(20px)';
                    card.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
                    
                    setTimeout(() => {{
                        card.style.opacity = '1';
                        card.style.transform = 'translateY(0)';
                    }}, 50);
                }}, index * 100);
            }});
        }});
    </script>
</body>
</html>
    """
    
    return html_content

@app.get("/api")
async def api_root():
    """API —ç–Ω–¥–ø–æ–∏–Ω—Ç - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–∏—Å–µ"""
    return {
        "service": "Desk Service",
        "status": "running",
        "message": "–°–µ—Ä–≤–∏—Å-–∑–∞–≥–ª—É—à–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç",
        "version": "1.0.0",
        "port": 8011,
        "timestamp": datetime.now().isoformat()
    }

@app.get("/health", response_model=HealthResponse)
async def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞"""
    uptime = datetime.now() - start_time
    return HealthResponse(
        health="healthy",
        uptime=str(uptime),
        service="desk-service"
    )

@app.get("/status", response_model=StatusResponse)
async def get_status():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞"""
    return StatusResponse(
        status="active",
        message="Desk —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ",
        timestamp=datetime.now().isoformat(),
        version="1.0.0"
    )

@app.get("/info")
async def get_info():
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ"""
    return {
        "name": "Desk Service", 
        "description": "–°–µ—Ä–≤–∏—Å-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –±—É–¥—É—â–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞",
        "version": "1.0.0",
        "port": 8011,
        "endpoints": [
            "/",
            "/health",
            "/status", 
            "/info",
            "/ping"
        ],
        "started_at": start_time.isoformat(),
        "uptime_seconds": (datetime.now() - start_time).total_seconds()
    }

@app.get("/ping")
async def ping():
    """–ü—Ä–æ—Å—Ç–æ–π ping –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"""
    return {"ping": "pong", "timestamp": datetime.now().isoformat()}

@app.post("/test")
async def test_endpoint(request: Request):
    """–¢–µ—Å—Ç–æ–≤—ã–π POST —ç–Ω–¥–ø–æ–∏–Ω—Ç"""
    try:
        body = await request.json()
    except:
        body = {}
    
    return {
        "message": "–¢–µ—Å—Ç–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç",
        "received_data": body,
        "timestamp": datetime.now().isoformat()
    }

@app.exception_handler(404)
async def not_found_handler(request: Request, exc: HTTPException):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ 404 –æ—à–∏–±–æ–∫"""
    return JSONResponse(
        status_code=404,
        content={
            "error": "–≠–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω",
            "path": request.url.path,
            "available_endpoints": ["/", "/health", "/status", "/info", "/ping", "/test"],
            "service": "desk-service"
        }
    )

@app.exception_handler(500)
async def internal_error_handler(request: Request, exc: Exception):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –æ—à–∏–±–æ–∫"""
    logger.error(f"–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞: {exc}")
    return JSONResponse(
        status_code=500,
        content={
            "error": "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
            "service": "desk-service",
            "timestamp": datetime.now().isoformat()
        }
    )

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8011) 