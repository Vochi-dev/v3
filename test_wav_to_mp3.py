#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ WAV —Ñ–∞–π–ª–æ–≤ –≤ MP3 –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –≤ S3
"""

import os
from datetime import datetime
from hetzner_s3_integration import HetznerS3Client
from s3_config import S3_CONFIG

def test_wav_to_mp3_conversion():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é WAV –≤ MP3 –∏ –∑–∞–≥—Ä—É–∑–∫—É –≤ S3"""
    
    print("üéµ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–í–ï–†–¢–ê–¶–ò–ò WAV ‚Üí MP3")
    print("="*60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ WAV —Ñ–∞–π–ª–∞
    test_wav_file = "test_call_record.wav"
    if not os.path.exists(test_wav_file):
        print(f"‚ùå –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª {test_wav_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    original_size = os.path.getsize(test_wav_file)
    print(f"üìÅ –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π WAV —Ñ–∞–π–ª: {test_wav_file}")
    print(f"üìè –†–∞–∑–º–µ—Ä –æ—Ä–∏–≥–∏–Ω–∞–ª–∞: {original_size} –±–∞–π—Ç")
    
    # –°–æ–∑–¥–∞–µ–º S3 –∫–ª–∏–µ–Ω—Ç
    try:
        s3_client = HetznerS3Client(
            access_key=S3_CONFIG['ACCESS_KEY'],
            secret_key=S3_CONFIG['SECRET_KEY'],
            region=S3_CONFIG['REGION']
        )
        print("‚úÖ S3 –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è S3 –∫–ª–∏–µ–Ω—Ç–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–µ–π
    enterprise_number = "0387"  # –¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ
    call_unique_id = f"test_wav_conversion_{int(datetime.now().timestamp())}"
    
    print(f"üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º WAV —Ñ–∞–π–ª —Å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–µ–π –≤ MP3...")
    print(f"   Enterprise: {enterprise_number}")
    print(f"   Call ID: {call_unique_id}")
    
    try:
        file_url = s3_client.upload_call_recording(
            enterprise_number=enterprise_number,
            call_unique_id=call_unique_id,
            local_file_path=test_wav_file,
            call_date=datetime.now()
        )
        
        if file_url:
            print(f"‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
            print(f"üîó URL: {file_url}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ MP3
            if file_url.endswith('.mp3'):
                print("‚úÖ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .mp3")
            else:
                print("‚ö†Ô∏è  –§–∞–π–ª –ù–ï –∏–º–µ–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .mp3")
            
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}")
        return False

def test_mp3_search():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–∏—Å–∫ MP3 —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ API"""
    print("\nüîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–ò–°–ö–ê MP3 –§–ê–ô–õ–û–í")
    print("="*60)
    
    try:
        s3_client = HetznerS3Client(
            access_key=S3_CONFIG['ACCESS_KEY'],
            secret_key=S3_CONFIG['SECRET_KEY'], 
            region=S3_CONFIG['REGION']
        )
        
        # –ò—â–µ–º –∑–∞–ø–∏—Å–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å
        today = datetime.now()
        yesterday = datetime(today.year, today.month, today.day-1 if today.day > 1 else 1, 0, 0, 0)
        
        recordings = s3_client.find_recordings(
            enterprise_number="0387",
            date_from=yesterday,
            date_to=today
        )
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(recordings)}")
        
        mp3_count = 0
        wav_count = 0
        
        for recording in recordings:
            key = recording['key']
            size = recording['size']
            
            if key.endswith('.mp3'):
                mp3_count += 1
                print(f"üéµ MP3: {key} ({size} –±–∞–π—Ç)")
            elif key.endswith('.wav'):
                wav_count += 1 
                print(f"üéµ WAV: {key} ({size} –±–∞–π—Ç)")
        
        print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   MP3 —Ñ–∞–π–ª–æ–≤: {mp3_count}")
        print(f"   WAV —Ñ–∞–π–ª–æ–≤: {wav_count}")
        print(f"   –í—Å–µ–≥–æ: {len(recordings)}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ö–û–ù–í–ï–†–¢–ê–¶–ò–ò –ê–£–î–ò–û")
    print("="*60)
    
    # –¢–µ—Å—Ç 1: –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∞
    success1 = test_wav_to_mp3_conversion()
    
    # –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤
    success2 = test_mp3_search()
    
    print("\n" + "="*60)
    if success1 and success2:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è WAV ‚Üí MP3 —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ –ü–æ–∏—Å–∫ MP3 —Ñ–∞–π–ª–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ —Å MP3")
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´")
        if not success1:
            print("‚ùå –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è WAV ‚Üí MP3 –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        if not success2:
            print("‚ùå –ü–æ–∏—Å–∫ MP3 —Ñ–∞–π–ª–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
    if os.path.exists("test_call_record.wav"):
        try:
            os.remove("test_call_record.wav")
            print("üßπ –¢–µ—Å—Ç–æ–≤—ã–π WAV —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
        except Exception as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {e}") 