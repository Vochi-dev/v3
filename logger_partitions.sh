#!/bin/bash

# ===============================================
# –°–ö–†–ò–ü–¢ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–ê–†–¢–ò–¶–ò–Ø–ú–ò CALL LOGGER
# ===============================================

LOGGER_URL="http://localhost:8026"

case "$1" in
    list)
        echo "üìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∞—Ä—Ç–∏—Ü–∏–π:"
        echo ""
        echo "üóÇÔ∏è –ü—Ä–æ—Å—Ç–∞—è —Å—Ö–µ–º–∞: –æ–¥–Ω–∞ –ø–∞—Ä—Ç–∏—Ü–∏—è = –æ–¥–∏–Ω –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è"
        PGPASSWORD='r/Yskqh/ZbZuvjb2b3ahfg==' psql -U postgres -d postgres -c "
        SELECT 
            SUBSTRING(tablename FROM 'call_traces_(.*)') as enterprise_number,
            tablename as partition_name,
            pg_size_pretty(pg_total_relation_size('public.'||tablename)) as size,
            (SELECT COUNT(*) FROM call_traces WHERE tableoid = ('public.'||tablename)::regclass) as records
        FROM pg_tables 
        WHERE tablename LIKE 'call_traces_0%' 
        ORDER BY enterprise_number;
        "
        ;;
        
    create)
        echo "‚ÑπÔ∏è  –í —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π —Å—Ö–µ–º–µ –ø–∞—Ä—Ç–∏—Ü–∏–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
        echo "üóÇÔ∏è –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è 4 –ø–∞—Ä—Ç–∏—Ü–∏–∏ –ø–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è–º: 0367, 0280, 0368, 0286"
        echo "üìä –ù–æ–≤—ã–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –ø–æ–ø–∞–¥–∞—é—Ç –≤ –æ–¥–Ω—É –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–∞—Ä—Ç–∏—Ü–∏–π"
        echo ""
        echo "–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –ø–∞—Ä—Ç–∏—Ü–∏–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è:"
        echo "  $0 add-enterprise 0100"
        ;;
        
    delete)
        echo "‚ö†Ô∏è  –í —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π —Å—Ö–µ–º–µ –Ω–µ–ª—å–∑—è —É–¥–∞–ª—è—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–∞—Ä—Ç–∏—Ü–∏–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π"
        echo "üóÇÔ∏è –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ 4 –æ–±—â–∏—Ö –ø–∞—Ä—Ç–∏—Ü–∏—è—Ö"
        echo ""
        echo "–î–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
        echo "  $0 cleanup 0367"
        echo ""
        echo "–î–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö:"
        echo "  $0 cleanup-all"
        ;;
        
    stats)
        if [ -z "$2" ]; then
            echo "‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è"
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 stats 0367"
            exit 1
        fi
        
        ENTERPRISE="$2"
        echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è $ENTERPRISE:"
        echo ""
        PGPASSWORD='r/Yskqh/ZbZuvjb2b3ahfg==' psql -U postgres -d postgres -c "
        SELECT 
            COUNT(*) as total_calls,
            COUNT(CASE WHEN call_events @> '[{\"event_type\": \"hangup\"}]' THEN 1 END) as completed_calls,
            AVG(jsonb_array_length(call_events)) as avg_events_per_call,
            MIN(start_time) as first_call,
            MAX(start_time) as last_call,
            pg_size_pretty(SUM(pg_column_size(call_events))) as events_size
        FROM call_traces 
        WHERE enterprise_number = '$ENTERPRISE';
        "
        ;;
        
    health)
        echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è logger —Å–µ—Ä–≤–∏—Å–∞:"
        echo ""
        curl -s "$LOGGER_URL/health" | python3 -m json.tool
        ;;
        
    rebuild-partitions)
        echo "üîÑ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä—Ç–∏—Ü–∏–π call_traces —Å –ø–æ–Ω—è—Ç–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏..."
        echo ""
        
        PGPASSWORD='r/Yskqh/ZbZuvjb2b3ahfg==' psql -U postgres -d postgres -c "
        -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–∞—Ä—Ç–∏—Ü–∏–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
        DROP TABLE IF EXISTS call_traces_0367, call_traces_0280, call_traces_0368, call_traces_other CASCADE;
        
        -- –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Ç–∏—Ü–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ remainder'–∞–º–∏ (–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º)
        CREATE TABLE call_traces_0368 PARTITION OF call_traces
            FOR VALUES WITH (MODULUS 4, REMAINDER 0);  -- 0368, 0286
        
        CREATE TABLE call_traces_0367 PARTITION OF call_traces
            FOR VALUES WITH (MODULUS 4, REMAINDER 1);  -- 0367
        
        CREATE TABLE call_traces_0280 PARTITION OF call_traces
            FOR VALUES WITH (MODULUS 4, REMAINDER 2);  -- 0280
        
        CREATE TABLE call_traces_other PARTITION OF call_traces
            FOR VALUES WITH (MODULUS 4, REMAINDER 3);  -- –±—É–¥—É—â–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è
        "
        
        if [ $? -eq 0 ]; then
            echo "‚úÖ –ü–∞—Ä—Ç–∏—Ü–∏–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω—ã —Å –ø–æ–Ω—è—Ç–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏!"
        else
            echo "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ä—Ç–∏—Ü–∏–π"
        fi
        ;;
        
    add-enterprise)
        if [ -z "$2" ]; then
            echo "‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è"
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 add-enterprise 0100"
            exit 1
        fi
        
        ENTERPRISE="$2"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–∞—Ä—Ç–∏—Ü–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è
        PARTITION_EXISTS=$(PGPASSWORD='r/Yskqh/ZbZuvjb2b3ahfg==' psql -U postgres -d postgres -t -c "
        SELECT COUNT(*) FROM pg_tables WHERE tablename = '$ENTERPRISE' AND schemaname = 'public';
        ")
        PARTITION_EXISTS=$(echo $PARTITION_EXISTS | tr -d ' ')
        
        if [ "$PARTITION_EXISTS" = "1" ]; then
            echo "‚úÖ –ü–∞—Ä—Ç–∏—Ü–∏—è $ENTERPRISE —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            RECORDS=$(PGPASSWORD='r/Yskqh/ZbZuvjb2b3ahfg==' psql -U postgres -d postgres -t -c "
            SELECT COUNT(*) FROM \"$ENTERPRISE\";
            ")
            echo "üìä –ó–∞–ø–∏—Å–µ–π –≤ –ø–∞—Ä—Ç–∏—Ü–∏–∏: $(echo $RECORDS | tr -d ' ')"
        else
            echo "‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä—Ç–∏—Ü–∏–∏ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è $ENTERPRISE..."
            
            PGPASSWORD='r/Yskqh/ZbZuvjb2b3ahfg==' psql -U postgres -d postgres -c "
            CREATE TABLE \"$ENTERPRISE\" PARTITION OF call_traces FOR VALUES IN ('$ENTERPRISE');
            ALTER TABLE \"$ENTERPRISE\" ADD CONSTRAINT unique_call_trace_$ENTERPRISE UNIQUE (unique_id, enterprise_number);
            "
            
            if [ $? -eq 0 ]; then
                echo "‚úÖ –ü–∞—Ä—Ç–∏—Ü–∏—è $ENTERPRISE —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
                echo "üìù –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: SELECT * FROM \"$ENTERPRISE\";"
            else
                echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ä—Ç–∏—Ü–∏–∏"
            fi
        fi
        ;;
        
    sql)
        if [ -z "$2" ]; then
            echo "‚ùå –£–∫–∞–∂–∏—Ç–µ SQL –∫–æ–º–∞–Ω–¥—É"
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 sql \"SELECT COUNT(*) FROM call_traces_0367;\""
            exit 1
        fi
        
        SQL_QUERY="$2"
        echo "üóÉÔ∏è  –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL –∑–∞–ø—Ä–æ—Å–∞:"
        echo "   $SQL_QUERY"
        echo ""
        
        PGPASSWORD='r/Yskqh/ZbZuvjb2b3ahfg==' psql -U postgres -d postgres -c "$SQL_QUERY"
        ;;
        
    cleanup)
        if [ -z "$2" ]; then
            echo "‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è"
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 cleanup 0367"
            exit 1
        fi
        
        ENTERPRISE="$2"
        echo "üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è $ENTERPRISE..."
        
        PGPASSWORD='r/Yskqh/ZbZuvjb2b3ahfg==' psql -U postgres -d postgres -c "
        DELETE FROM call_traces WHERE enterprise_number = '$ENTERPRISE';
        "
        
        DELETED=$(PGPASSWORD='r/Yskqh/ZbZuvjb2b3ahfg==' psql -U postgres -d postgres -t -c "SELECT ROW_COUNT();")
        echo "‚úÖ –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: $DELETED"
        ;;
        
    cleanup-all)
        echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –∏–∑ call_traces!"
        echo "–í—ã —É–≤–µ—Ä–µ–Ω—ã? (yes/no)"
        read -r CONFIRM
        
        if [ "$CONFIRM" = "yes" ]; then
            echo "üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö..."
            PGPASSWORD='r/Yskqh/ZbZuvjb2b3ahfg==' psql -U postgres -d postgres -c "
            TRUNCATE call_traces;
            "
            echo "‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã"
        else
            echo "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
        fi
        ;;
        
    test-event)
        ENTERPRISE="${2:-0367}"
        UNIQUE_ID="TEST-$(date +%s).0"
        
        echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è –¥–ª—è –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è $ENTERPRISE..."
        echo "üìã UniqueId: $UNIQUE_ID"
        
        RESPONSE=$(curl -s -X POST "$LOGGER_URL/log/event" -H "Content-Type: application/json" -d "{
            \"enterprise_number\": \"$ENTERPRISE\",
            \"unique_id\": \"$UNIQUE_ID\",
            \"event_type\": \"dial\",
            \"event_data\": {
                \"Phone\": \"375296254070\",
                \"Extensions\": [\"150\"],
                \"Trunk\": \"0001363\"
            }
        }")
        
        echo "$RESPONSE" | python3 -m json.tool
        
        if echo "$RESPONSE" | grep -q '"status": "success"'; then
            echo ""
            echo "‚úÖ –°–æ–±—ã—Ç–∏–µ –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–æ! –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–µ–π—Å:"
            echo ""
            curl -s "$LOGGER_URL/trace/$UNIQUE_ID" | python3 -m json.tool
        fi
        ;;
        
    *)
        echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Call Logger Service (–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å—Ö–µ–º–∞)"
        echo ""
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {–∫–æ–º–∞–Ω–¥–∞} [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]"
        echo ""
        echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
        echo "  list                    - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∞—Ä—Ç–∏—Ü–∏–π"
        echo "  stats <enterprise>      - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é"
        echo "  health                  - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞"
        echo ""
        echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
        echo "  rebuild-partitions      - –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –ø–∞—Ä—Ç–∏—Ü–∏–∏ —Å –ø–æ–Ω—è—Ç–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏"
        echo "  add-enterprise <num>    - –î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä—Ç–∏—Ü–∏—é –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è"
        echo "  cleanup <enterprise>    - –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è"
        echo "  cleanup-all            - –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ (—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º)"
        echo ""
        echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
        echo "  test-event [enterprise] - –¢–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0367)"
        echo "  sql \"<query>\"           - –í—ã–ø–æ–ª–Ω–∏—Ç—å SQL –∑–∞–ø—Ä–æ—Å"
        echo ""
        echo "üìã –ü—Ä–∏–º–µ—Ä—ã:"
        echo "  $0 list"
        echo "  $0 stats 0367"
        echo "  $0 add-enterprise 0100"
        echo "  $0 test-event 0367"
        echo "  $0 cleanup 0367"
        echo "  $0 sql \"SELECT COUNT(*) FROM call_traces_0367;\""
        echo ""
        echo "‚ÑπÔ∏è  –°—Ö–µ–º–∞ —Å –ø–æ–Ω—è—Ç–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ (–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º):"
        echo "  - call_traces_0368 (remainder 0): –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è 0368, 0286"
        echo "  - call_traces_0367 (remainder 1): –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ 0367"  
        echo "  - call_traces_0280 (remainder 2): –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ 0280"
        echo "  - call_traces_other (remainder 3): –±—É–¥—É—â–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è"
        echo "  - –°–æ–±—ã—Ç–∏—è —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ JSONB –ø–æ–ª–µ call_events"
        echo ""
        echo "–°–µ—Ä–≤–∏—Å: $LOGGER_URL"
        exit 1
        ;;
esac

exit 0
