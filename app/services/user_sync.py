# app/services/user_sync.py
import csv
import io
from typing import List, Dict, Set

import aiosqlite
from telegram import Bot
from telegram.error import TelegramError

from app.config import DB_PATH


async def find_users_to_remove(file_bytes: bytes) -> List[Dict]:
    """
    –†–∞–∑–±–∏—Ä–∞–µ—Ç CSV –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã—Ö
    —Å–ª–µ–¥—É–µ—Ç —É–¥–∞–ª–∏—Ç—å (–¥–ª—è –ø–æ–∫–∞–∑–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É).
    –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞:
      {
        "tg_id": Optional[int],
        "email": str,
        "enterprise_name": Optional[str]
      }
    """
    # 1) –ü–∞—Ä—Å–∏–º CSV ‚Üí –º–Ω–æ–∂–µ—Å—Ç–≤–æ email
    text = file_bytes.decode("utf-8-sig")
    reader = csv.DictReader(io.StringIO(text))
    csv_emails: Set[str] = set()
    for row in reader:
        email = (row.get("email") or "").strip().lower()
        if email:
            csv_emails.add(email)

    to_remove: List[Dict] = []

    # 2) –ë–µ—Ä—ë–º –∏–∑ –ë–î –≤—Å–µ email_users + –ø—Ä–∏–≤—è–∑–∫–∏ –∫ enterprise –∏ telegram
    async with aiosqlite.connect(DB_PATH) as db:
        db.row_factory = aiosqlite.Row
        async with db.execute(
            """
            SELECT
              eu.email         AS email,
              ent.name         AS enterprise_name,
              tu.tg_id         AS tg_id
            FROM email_users eu
            LEFT JOIN enterprises ent
              ON eu.number = ent.number
            LEFT JOIN telegram_users tu
              ON eu.email = tu.email
            """
        ) as cur:
            rows = await cur.fetchall()

    # 3) –ö–æ–≥–æ –Ω–µ—Ç –≤ CSV ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –≤ to_remove
    for row in rows:
        if row["email"].strip().lower() not in csv_emails:
            to_remove.append({
                "tg_id": row["tg_id"],
                "email": row["email"],
                "enterprise_name": row["enterprise_name"],
            })

    return to_remove


async def perform_sync(file_bytes: bytes) -> None:
    """
    –£–¥–∞–ª—è–µ—Ç –∏–∑ email_users (–∏, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –ø—Ä–∏–≤—è–∑–∞–Ω ‚Äî
    –∏–∑ telegram_users –∏ enterprise_users) –≤—Å–µ—Ö, –∫–æ–≥–æ –≤–µ—Ä–Ω—É–ª
    find_users_to_remove, –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –∏—Ö –≤ Telegram.
    """
    users = await find_users_to_remove(file_bytes)
    if not users:
        return

    async with aiosqlite.connect(DB_PATH) as db:
        db.row_factory = aiosqlite.Row

        for u in users:
            tg_id = u["tg_id"]
            email = u["email"]

            # 1) –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –ø—Ä–æ–≤–µ—Ä–µ–Ω –∏ –ø—Ä–∏–≤—è–∑–∞–Ω ‚Äî –Ω–∞–π–¥—ë–º –µ–≥–æ enterprise_users
            bot_token = None
            if tg_id is not None:
                async with db.execute(
                    """
                    SELECT e.bot_token
                    FROM enterprise_users eu
                    JOIN enterprises e ON eu.enterprise_id = e.number
                    WHERE eu.telegram_id = ?
                    """,
                    (tg_id,),
                ) as cur:
                    row = await cur.fetchone()
                if row:
                    bot_token = row["bot_token"]

                # 2) —É–¥–∞–ª—è–µ–º –∏–∑ enterprise_users –∏ telegram_users
                await db.execute(
                    "DELETE FROM enterprise_users WHERE telegram_id = ?",
                    (tg_id,),
                )
                await db.execute(
                    "DELETE FROM telegram_users WHERE tg_id = ?",
                    (tg_id,),
                )

            # 3) —É–¥–∞–ª—è–µ–º –∏–∑ email_users
            await db.execute(
                "DELETE FROM email_users WHERE email = ?",
                (email,),
            )

            # 4) —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –∑–Ω–∞–µ–º –µ–≥–æ tg_id –∏ bot_token
            if tg_id and bot_token:
                try:
                    bot = Bot(token=bot_token)
                    await bot.send_message(
                        chat_id=tg_id,
                        text=(
                            "üö´ –í–∞—à –¥–æ—Å—Ç—É–ø –æ—Ç–æ–∑–≤–∞–Ω ‚Äî "
                            "–≤–∞—à e-mail –±–æ–ª—å—à–µ –Ω–µ –∑–Ω–∞—á–∏—Ç—Å—è –≤ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º CSV."
                        )
                    )
                except TelegramError:
                    pass

        await db.commit()
